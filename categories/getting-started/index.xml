<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>getting started on Hugo</title>
    <link>https://gohugo.io/categories/getting-started/</link>
    <description>Recent content in getting started on Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="https://gohugo.io/categories/getting-started/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Get Started</title>
      <link>https://gohugo.io/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gohugo.io/getting-started/</guid>
      <description>If this is your first time using Hugo and you&amp;rsquo;ve already installed Hugo on your machine, we recommend the quick start. You can also use external learning resources to learn Hugo.</description>
    </item>
    
    <item>
      <title>Quick Start</title>
      <link>https://gohugo.io/getting-started/quick-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gohugo.io/getting-started/quick-start/</guid>
      <description>In this tutorial you will:
Create a site Add content Configure the site Publish the site Prerequisites Before you begin this tutorial you must:
Install Hugo (extended edition, v0.112.0 or later) Install Git You must also be comfortable working from the command line.
Create a site Commands If you are a Windows user:
Do not use the Command Prompt Do not use Windows PowerShell Run these commands from PowerShell or a Linux terminal such as WSL or Git Bash PowerShell and Windows PowerShell are different applications.</description>
    </item>
    
    <item>
      <title>Basic usage</title>
      <link>https://gohugo.io/getting-started/usage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gohugo.io/getting-started/usage/</guid>
      <description>Test your installation After installing Hugo, test your installation by running:
hugo version You should see something like:
hugo v0.105.0-0e3b42b4a9bdeb4d866210819fc6ddcf51582ffa+extended linux/amd64 BuildDate=2022-10-28T12:29:05Z VendorInfo=snap:0.105.0 Display available commands To see a list of the available commands and flags:
hugo help To get help with a subcommand, use the --help flag. For example:
hugo server --help Build your site To build your site, cd into your project directory and run:
hugo The hugo command builds your site, publishing the files to the public directory.</description>
    </item>
    
    <item>
      <title>Directory Structure</title>
      <link>https://gohugo.io/getting-started/directory-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gohugo.io/getting-started/directory-structure/</guid>
      <description>New Site Scaffolding Running hugo new site example from the command line creates a directory structure with the following elements:
example/ ├── archetypes/ │ └── default.md ├── assets/ ├── content/ ├── data/ ├── layouts/ ├── public/ ├── static/ ├── themes/ └── hugo.toml Directory Structure Explained The following is a high-level overview of each of the directories with links to each of their respective sections within the Hugo docs.
archetypes You can create new content files in Hugo using the hugo new command.</description>
    </item>
    
    <item>
      <title>Configure Hugo</title>
      <link>https://gohugo.io/getting-started/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gohugo.io/getting-started/configuration/</guid>
      <description>Configuration File Hugo uses the hugo.toml, hugo.yaml, or hugo.json (if found in the site root) as the default site configuration file.
The user can choose to override that default with one or more site config files using the command-line --config switch.
Examples:
hugo --config debugconfig.toml hugo --config a.toml,b.toml,c.toml Multiple site config files can be specified as a comma-separated string to the --config switch.
hugo.toml vs config.toml In Hugo 0.110.0 we changed the default config base filename to hugo, e.</description>
    </item>
    
    <item>
      <title>Configure Markup</title>
      <link>https://gohugo.io/getting-started/configuration-markup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gohugo.io/getting-started/configuration-markup/</guid>
      <description>Configure Markup See Goldmark for settings related to the default Markdown handler in Hugo.
Below are all markup related configuration in Hugo with their default settings:
hugo. yaml &amp;nbsp; toml &amp;nbsp; json &amp;nbsp; markup: asciidocExt: attributes: {} backend: html5 extensions: [] failureLevel: fatal noHeaderOrFooter: true preserveTOC: false safeMode: unsafe sectionNumbers: false trace: false verbose: false workingFolderCurrent: false defaultMarkdownHandler: goldmark goldmark: extensions: definitionList: true footnote: true linkify: true linkifyProtocol: https strikethrough: true table: true taskList: true typographer: apostrophe: &amp;#39;&amp;amp;rsquo;&amp;#39; disable: false ellipsis: &amp;#39;&amp;amp;hellip;&amp;#39; emDash: &amp;#39;&amp;amp;mdash;&amp;#39; enDash: &amp;#39;&amp;amp;ndash;&amp;#39; leftAngleQuote: &amp;#39;&amp;amp;laquo;&amp;#39; leftDoubleQuote: &amp;#39;&amp;amp;ldquo;&amp;#39; leftSingleQuote: &amp;#39;&amp;amp;lsquo;&amp;#39; rightAngleQuote: &amp;#39;&amp;amp;raquo;&amp;#39; rightDoubleQuote: &amp;#39;&amp;amp;rdquo;&amp;#39; rightSingleQuote: &amp;#39;&amp;amp;rsquo;&amp;#39; parser: attribute: block: false title: true autoHeadingID: true autoHeadingIDType: github wrapStandAloneImageWithinParagraph: true renderer: hardWraps: false unsafe: false xhtml: false highlight: anchorLineNos: false codeFences: true guessSyntax: false hl_Lines: &amp;#34;&amp;#34; hl_inline: false lineAnchors: &amp;#34;&amp;#34; lineNoStart: 1 lineNos: false lineNumbersInTable: true noClasses: true noHl: false style: monokai tabWidth: 4 tableOfContents: endLevel: 3 ordered: false startLevel: 2 [markup] defaultMarkdownHandler = &amp;#39;goldmark&amp;#39; [markup.</description>
    </item>
    
  </channel>
</rss>
