<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Showcase on Hugo</title>
    <link>https://gohugo.io/showcase/</link>
    <description>Recent content in Showcase on Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Oct 2022 00:00:00 +0200</lastBuildDate><atom:link href="https://gohugo.io/showcase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ampio Knowledge Base</title>
      <link>https://gohugo.io/showcase/ampio-help/</link>
      <pubDate>Sun, 30 Oct 2022 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/ampio-help/</guid>
      <description>As a company that specializes in highly customizable smart solutions for various industries, Ampio has accumulated a vast amount of knowledge throughout the years. We were on the lookout for a user-friendly platform to impart this knowledge to our clients and installers. Delivering a service that caters to both audiences, scattered around the globe with vastly divergent needs and expectations, was a challenge.
On the one hand, we needed something that would let us educate a client with no technical knowledge about our system in a visually appealing way.</description>
    </item>
    
    <item>
      <title>Alora Labs</title>
      <link>https://gohugo.io/showcase/alora-labs/</link>
      <pubDate>Thu, 27 May 2021 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/alora-labs/</guid>
      <description>At Alora Labs we always have an eye open for new tools and technology that we can utilize to the benefit of our customers or internal projects like our website.
The previous iteration of our site was built with Jekyll, which served us well at first. However as time went on, we became frustrated with the number of dependencies we had to rely on, that would often break at the most inconvenient times.</description>
    </item>
    
    <item>
      <title>Godot Tutorials</title>
      <link>https://gohugo.io/showcase/godot-tutorials/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/godot-tutorials/</guid>
      <description>Godot Tutorials started as a way to teach beginners game programming and game development. As I created videos, I ran into a problem; if I made a mistake with a YouTube video, it was difficult to correct errors.
I discovered that blogging episodes and having articles that teach on top of my videos is a fantastic solution to my problem.
As I researched blogging platforms, I came across two solutions; however, I chose Hugo because it&amp;rsquo;s built with Markdown in mind and simplified my workflow.</description>
    </item>
    
    <item>
      <title>Digital.gov</title>
      <link>https://gohugo.io/showcase/digitalgov/</link>
      <pubDate>Fri, 01 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/digitalgov/</guid>
      <description>For over a decade, Digital.gov has provided guidance, training, and community support to the people who are responsible for delivering digital services in the U.S. government. Essentially, it is a place where people can find examples of problems being solved in government, and get links to the tools and resources they need.
Through collaboration in our communities of practice, Digital.gov is a window into the people who work in technology in government and the challenges they face making digital services stronger and more effective.</description>
    </item>
    
    <item>
      <title>KeyCDN</title>
      <link>https://gohugo.io/showcase/keycdn/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/keycdn/</guid>
      <description>At KeyCDN one of our primary focuses is on performance. With speed being ingrained in our DNA we knew from the start that we must use a fast static website generator that could meet our requirements. When evaluating the right solution, Hugo met our requirements and we looked no further as it was the fastest and most flexible.
Why we chose Hugo Before our migration to Hugo our website was powered by a PHP-based website that had about 50 pages and a WordPress website that had over 500 posts between our blog and knowledge base.</description>
    </item>
    
    <item>
      <title>Hapticmedia Blog</title>
      <link>https://gohugo.io/showcase/hapticmedia/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/hapticmedia/</guid>
      <description>Our goal was to create a simple, effective and multilingual blog on 3D technology that could be managed by a non-technical profile.
Why Hugo? Hugo addresses all these needs, coupled with Forestry.io for its administration via a &amp;ldquo;turnkey&amp;rdquo; interface. We have attached particular importance to SEO, and therefore to the creation of an advanced taxonomy system. Thus, each author and tag has a dedicated page, listing the related posts.
What we liked The multilingual content support, especially simple to setup.</description>
    </item>
    
    <item>
      <title>Bypass Censorship</title>
      <link>https://gohugo.io/showcase/bypasscensorship/</link>
      <pubDate>Sun, 16 Jun 2019 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/bypasscensorship/</guid>
      <description>The British Broadcasting Corporation (BBC) (UK), Deutsche Welle (DW) (Germany), France Médias Monde (FMM) (France), the U.S. Agency for Global Media (USAGM) (US) and the Open Technology Fund (OTF) (US) co-sponsor the Bypass Censorship website.
Websites of international news agencies are often blocked in many countries. In order to connect people to these sites, Bypass Censorship feature and recommend tools in the following languages: English, French, Spanish, Arabic, Farsi, Chinese, and Russian.</description>
    </item>
    
    <item>
      <title>PHARMASEAL</title>
      <link>https://gohugo.io/showcase/pharmaseal/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/pharmaseal/</guid>
      <description>We wanted to shake the status quo with PHARMASEAL, opting for a fast and scalable website built with Hugo instead of slower monolithic systems the competitors were using.
We had two goals:
Make it fast
We wanted to optimise the site as much as possible, so we opted for using Cloudinary, enabling us to take advantage of on-the-fly image manipulation, and thanks to the sheer speed of static sites, we achieved a perfect optimisation score with Google audits.</description>
    </item>
    
    <item>
      <title>fireship.io</title>
      <link>https://gohugo.io/showcase/fireship/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/fireship/</guid>
      <description>After careful consideration of JavaScript/JSX-based static site generators, it became clear that Hugo was the only tool capable of handling our project&amp;rsquo;s complex demands. Not only do we have multiple content formats and taxonomies, but we often need to customize the experience at a more granular level. The problems Hugo has solved for us include:
Render speed. We know from past experience that JavaScript-based static site generators become very slow when you have thousands of pages and images.</description>
    </item>
    
    <item>
      <title>Tomango</title>
      <link>https://gohugo.io/showcase/tomango/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0200</pubDate>
      
      <guid>https://gohugo.io/showcase/tomango/</guid>
      <description>Hugo is our static site generator (SSG) of choice. It&amp;rsquo;s really quick. After using it on a number of client projects, it became clear that our new site had to be built with Hugo.
The big benefit of an SSG is how it moves all the heavy lifting to the build time.
For example in WordPress, all the category pages are created at runtime, generating a lot of database queries. In Hugo, the paginated category pages are created at build time - so all the computational complexity is done once, and doesn&amp;rsquo;t impact the user at all.</description>
    </item>
    
    <item>
      <title>Forestry.io</title>
      <link>https://gohugo.io/showcase/forestry/</link>
      <pubDate>Fri, 16 Mar 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/forestry/</guid>
      <description>It was clear from the get-go that we had to go with a static site generator. Static sites are secure, performant, and give you 100% flexibility. At Forestry.io we provide Content Management Solutions for websites built with static site generators, so we might be a little biased. The only question: Which static site generator was the right choice for us?
Why Hugo? In our early research we looked at Ionic’s site to get some inspiration.</description>
    </item>
    
    <item>
      <title>Let’s Encrypt</title>
      <link>https://gohugo.io/showcase/letsencrypt/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/letsencrypt/</guid>
      <description>The Let’s Encrypt website has a common set of elements: A landing page and some other static info-pages, a document section, a blog, and a documentation section. Having it moved to Hugo was mostly motivated by a simpler administration and Hugo&amp;rsquo;s multilingual support. They already serve HTTPS to more than 60 million domains, and having the documentation available in more languages will increase that reach.1
The Let&amp;#39;s Encrypt website is now built with @GoHugoIO, easing management and giving us access to more features.</description>
    </item>
    
    <item>
      <title>1Password Support</title>
      <link>https://gohugo.io/showcase/1password-support/</link>
      <pubDate>Thu, 22 Feb 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/1password-support/</guid>
      <description>At 1Password, we used to go through a different documentation platform every month: blog engines, ebooks, wikis, site generators written in Ruby and JavaScript. Each was inadequate in its own special way. Then we found Hugo. We made one last switch, and we&amp;rsquo;re glad we did.
Not all static site generators are created equal Finding a tool that will make your customers, writers, designers, and DevOps team happy is no easy task, but we managed it with Hugo:</description>
    </item>
    
    <item>
      <title>Quiply Employee Communications App</title>
      <link>https://gohugo.io/showcase/quiply-employee-communications-app/</link>
      <pubDate>Tue, 13 Feb 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/quiply-employee-communications-app/</guid>
      <description>With the launch of our Employee Communications app Quiply we created a very simple and static one-page website to showcase our product.
As our customer base and demand for marketing and communication started to grow, we needed a solution to easily grow and extend the contents of our web presence. As we do not have the need to serve dynamic content, we decided to use a static site generator. Amongst a couple of others, we tried Hugo and it became immediately clear that we&amp;rsquo;d use Hugo going forward as it compiles super-fast, is intuitive to use and offers all the features we need.</description>
    </item>
    
    <item>
      <title>Linode Docs</title>
      <link>https://gohugo.io/showcase/linode/</link>
      <pubDate>Mon, 12 Feb 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/linode/</guid>
      <description>The documentation team at Linode has been writing guides since 2009, with the goal of helping new and experienced Linux users find the best tools and get the most out of their systems.
As our library grew into thousands of guides, we needed a fast static site generator with intuitive templating and the flexibility to extend Markdown without constantly writing HTML and CSS.
Hugo solved a lot of our growing pains with features like shortcodes, customizable URLs, LiveReload, and more.</description>
    </item>
    
    <item>
      <title>Hartwell Insurance</title>
      <link>https://gohugo.io/showcase/hartwell-insurance/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/hartwell-insurance/</guid>
      <description>We’ve just launched a shiny new website for Hartwell Insurance – I’m really proud of it. It was tackled in a different way to most previous Tomango site builds, using some fancy new tools and some vintage web standards.
It’s a multi-page, single-page (!) website written in Hugo, a static site generator built with performance as a first-class feature. I’ve outlined a load of benefits to Hugo &amp;amp; static sites here, in case you’re interested.</description>
    </item>
    
    <item>
      <title>Hugo Showcase Template</title>
      <link>https://gohugo.io/showcase/template/</link>
      <pubDate>Wed, 07 Feb 2018 00:00:00 +0100</pubDate>
      
      <guid>https://gohugo.io/showcase/template/</guid>
      <description>Have a notable Hugo site1? We would love to feature it in this Showcase Section
Please:
Fork https://github.com/gohugoio/hugoDocs. Run hugo new showcase/your-site. This will use the archetype bundle in the docs repo. Follow the instructions in the newly created page bundle. Create a new pull request in https://github.com/gohugoio/hugoDocs/pulls. We want this to show Hugo in its best light, so this is not for the average Hugo blog. In most cases the answer to &amp;ldquo;Is my site notable?</description>
    </item>
    
  </channel>
</rss>
